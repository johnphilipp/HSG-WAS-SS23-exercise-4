{"version":3,"file":"Keys.js","sourceRoot":"","sources":["Keys.ts"],"names":[],"mappings":";;;AAAA,yCAAkD;AAGlD;;;;GAIG;AAEU,QAAA,6BAA6B,GAAG;IAC3C;;OAEG;IACH,QAAQ,EAAE,IAAI,uBAAgB,CAAU,gEAAgE,CAAC;IACzG;;OAEG;IACH,eAAe,EAAE,IAAI,uBAAgB,CACnC,4DAA4D,CAC7D;CACF,CAAC","sourcesContent":["import { ActionContextKey } from '@comunica/core';\nimport type { AnnotateSourcesType } from '@comunica/types-link-traversal';\n\n/**\n * When adding entries to this file, also add a shortcut for them in the contextKeyShortcuts TSDoc comment in\n * ActorIniQueryBase in @comunica/actor-init-query if it makes sense to use this entry externally.\n * Also, add this shortcut to IQueryContextCommon in @comunica/types.\n */\n\nexport const KeysRdfResolveHypermediaLinks = {\n  /**\n   * A flag for indicating if traversal should be enabled. Defaults to true.\n   */\n  traverse: new ActionContextKey<boolean>('@comunica/actor-rdf-resolve-hypermedia-links-traverse:traverse'),\n  /**\n   * Context entry for indicating the type of source annotation.\n   */\n  annotateSources: new ActionContextKey<AnnotateSourcesType>(\n    '@comunica/bus-rdf-resolve-hypermedia-links:annotateSources',\n  ),\n};\n"]}