{"version":3,"file":"TreeMetadata.js","sourceRoot":"","sources":["TreeMetadata.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAIH,YAAY;AACZ,qDAAqD;AACrD,IAAY,gBAsBX;AAtBD,WAAY,gBAAgB;IAC1B,qDAAqD;IACrD,2EAAuD,CAAA;IACvD,wDAAwD;IACxD,iFAA6D,CAAA;IAC7D,yDAAyD;IACzD,2EAAuD,CAAA;IACvD,gFAAgF;IAChF,wDAAwD;IACxD,qFAAiE,CAAA;IACjE,iCAAiC;IACjC,uGAAmF,CAAA;IACnF,iCAAiC;IACjC,+EAA2D,CAAA;IAC3D,iCAAiC;IACjC,iGAA6E,CAAA;IAC7E,iCAAiC;IACjC,iFAA6D,CAAA;IAC7D,mFAAmF;IACnF,iDAAiD;IACjD,gGAAgG;IAChG,uGAAmF,CAAA;AACrF,CAAC,EAtBW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAsB3B;AAED,YAAY;AACZ,kDAAkD;AAClD,qDAAqD;AACrD,IAAY,SAeX;AAfD,WAAY,SAAS;IACnB,kFAAkF;IAClF,qDAAqD;IACrD,gDAAmC,CAAA;IACnC,8DAA8D;IAC9D,wDAA2C,CAAA;IAC3C,mEAAmE;IACnE,4EAA+D,CAAA;IAC/D,6FAA6F;IAC7F,gDAAgD;IAChD,gDAAmC,CAAA;IACnC,oCAAoC;IACpC,kDAAqC,CAAA;IACrC,8EAA8E;IAC9E,oEAAuD,CAAA;AACzD,CAAC,EAfW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAepB","sourcesContent":["/**\n * Inspired from\n * https://github.com/TREEcg/tree-metadata-extraction/blob/42be38925cf6a033ddadaca5ecce929902ef1545/src/util/Util.ts\n */\n\nimport type * as RDF from 'rdf-js';\n\n// Reference\n// https://treecg.github.io/specification/#vocabulary\nexport enum RelationOperator {\n  //  All elements in the related node have this prefix\n  PrefixRelation = 'https://w3id.org/tree#PrefixRelation',\n  //  All elements in the related node have this substring\n  SubstringRelation = 'https://w3id.org/tree#SubstringRelation',\n  //  All members of this related node end with this suffix\n  SuffixRelation = 'https://w3id.org/tree#SuffixRelation',\n  // The related Nodeâ€™s members are greater than the value. For string comparison,\n  // this relation can refer to a comparison configuration\n  GreaterThanRelation = 'https://w3id.org/tree#GreaterThanRelation',\n  // Similar to GreaterThanRelation\n  GreaterThanOrEqualToRelation = 'https://w3id.org/tree#GreaterThanOrEqualToRelation',\n  // Similar to GreaterThanRelation\n  LessThanRelation = 'https://w3id.org/tree#LessThanRelation',\n  // Similar to GreaterThanRelation\n  LessThanOrEqualToRelation = 'https://w3id.org/tree#LessThanOrEqualToRelation',\n  // Similar to GreaterThanRelation\n  EqualThanRelation = 'https://w3id.org/tree#EqualThanRelation',\n  // A contains b iff no points of b lie in the exterior of a, and at least one point\n  // of the interior of b lies in the interior of a\n  // reference http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-covers-spatial.html\n  GeospatiallyContainsRelation = 'https://w3id.org/tree#GeospatiallyContainsRelation',\n}\n\n// Reference\n// https://treecg.github.io/specification/#classes\n// https://treecg.github.io/specification/#properties\nexport enum TreeNodes {\n  // A tree:Node is a node that may contain links to other dereferenceable resources\n  // that lead to a full overview of a tree:Collection.\n  Node = 'https://w3id.org/tree#node',\n  // An entity that describes a relation between two tree:Nodes.\n  Relation = 'https://w3id.org/tree#relation',\n  // The relation operator type describe by the enum RelationOperator\n  RDFTypeNode = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n  // A property path, as defined by SHACL, that indicates what resource the tree:value affects.\n  // reference SHACL: https://www.w3.org/TR/shacl/\n  Path = 'https://w3id.org/tree#path',\n  // The contextual value of this node\n  Value = 'https://w3id.org/tree#value',\n  // Remaining number of items of this node, the items in its children included.\n  RemainingItems = 'https://w3id.org/tree#remainingItems'\n}\n\nexport interface ITreeNode {\n  // Relation of the node\n  relation?: ITreeRelation[];\n  // Name/URL of the node\n  subject: string;\n}\n\nexport interface ITreeRelation {\n  // The relation operator type describe by the enum RelationOperator\n  '@type'?: {\n    value: string;\n    quad: RDF.Quad;\n  };\n  // Refer to the TreeNodes of the similar name\n  remainingItems?: {\n    value: number;\n    quad: RDF.Quad;\n  };\n  // Refer to the TreeNodes of the similar name\n  path?: {\n    value: string;\n    quad: RDF.Quad;\n  };\n  // Refer to the TreeNodes of the similar name\n  value?: {\n    value: any;\n    quad: RDF.Quad;\n  };\n  // The URL to be derefenced when this relation cannot be pruned.\n  node: string ;\n}\n\n// An helper to build the relation from a stream\nexport interface ITreeRelationDescription {\n  // Id of the blank node of the relation\n  subject?: [string, RDF.Quad];\n  // Refer to the TreeNodes of the similar name\n  value?: any;\n  // The relation operator type describe by the enum RelationOperator\n  operator?: [RelationOperator, RDF.Quad];\n  // Refer to the TreeNodes of the similar name\n  remainingItems?: [number, RDF.Quad];\n}\n"]}